// <auto-generated />
using System;
using AV.DA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AV.DA.Migrations
{
    [DbContext(typeof(AVDBContext))]
    [Migration("20220628212048_creacion")]
    partial class creacion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AV.BO.Administrador", b =>
                {
                    b.Property<int>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("VarChar(100)");

                    b.Property<int?>("PagoIdPago")
                        .HasColumnType("int");

                    b.HasKey("IdAdmin");

                    b.HasIndex("PagoIdPago");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("AV.BO.Asiento", b =>
                {
                    b.Property<int>("NroAsiento")
                        .HasColumnType("int");

                    b.Property<int?>("MesaNroMesa")
                        .HasColumnType("int");

                    b.HasKey("NroAsiento");

                    b.HasIndex("MesaNroMesa");

                    b.ToTable("Asientos");
                });

            modelBuilder.Entity("AV.BO.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("VarChar(100)");

                    b.Property<byte[]>("FotoPerfil")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VarChar(50)");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("VarChar(100)");

                    b.Property<int>("NroDocumento")
                        .HasColumnType("Integer");

                    b.Property<string>("ProfesionCargo")
                        .IsRequired()
                        .HasColumnType("VarChar(100)");

                    b.Property<int>("Telefono")
                        .HasColumnType("Integer");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("VarChar(20)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AV.BO.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadAsientosMesa")
                        .HasColumnType("Integer");

                    b.Property<int>("CantidadMesas")
                        .HasColumnType("Integer");

                    b.Property<string>("CriterioAsignacion")
                        .IsRequired()
                        .HasColumnType("VarChar(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VarChar(300)");

                    b.Property<string>("EmpresaCreadora")
                        .IsRequired()
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasColumnType("VarChar(20)");

                    b.Property<byte[]>("ImagenPortada")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("VarChar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VarChar(100)");

                    b.Property<int>("NroCupos")
                        .HasColumnType("Integer");

                    b.Property<int>("PrecioAsiento")
                        .HasColumnType("Integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("VarChar(30)");

                    b.HasKey("EventoId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("AV.BO.Login", b =>
                {
                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("VarChar(150)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("VarChar(30)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("VarChar(20)");

                    b.HasKey("CorreoElectronico");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("AV.BO.Mesa", b =>
                {
                    b.Property<int>("NroMesa")
                        .HasColumnType("int");

                    b.Property<int>("CantidadAsientos")
                        .HasColumnType("Int");

                    b.Property<int>("LugaresDisponibles")
                        .HasColumnType("Int");

                    b.HasKey("NroMesa");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("AV.BO.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("VarChar(200)");

                    b.Property<string>("EstadoPago")
                        .IsRequired()
                        .HasColumnType("VarChar(20)");

                    b.Property<int?>("ReservaIdReserva")
                        .HasColumnType("int");

                    b.HasKey("IdPago");

                    b.HasIndex("ReservaIdReserva");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("AV.BO.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AsientoNroAsiento")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<byte[]>("ComprobantePago")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<string>("EstadoReserva")
                        .IsRequired()
                        .HasColumnType("VarChar(20)");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int");

                    b.HasKey("IdReserva");

                    b.HasIndex("AsientoNroAsiento");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EventoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("AV.BO.Administrador", b =>
                {
                    b.HasOne("AV.BO.Pago", "Pago")
                        .WithMany()
                        .HasForeignKey("PagoIdPago");

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("AV.BO.Asiento", b =>
                {
                    b.HasOne("AV.BO.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaNroMesa");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("AV.BO.Pago", b =>
                {
                    b.HasOne("AV.BO.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("ReservaIdReserva");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("AV.BO.Reserva", b =>
                {
                    b.HasOne("AV.BO.Asiento", "Asiento")
                        .WithMany()
                        .HasForeignKey("AsientoNroAsiento");

                    b.HasOne("AV.BO.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("AV.BO.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId");

                    b.Navigation("Asiento");

                    b.Navigation("Cliente");

                    b.Navigation("Evento");
                });
#pragma warning restore 612, 618
        }
    }
}
